{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","start","setState","sortAlphabet","ALPHABET","sortLength","LENGTH","reverse","reset","this","goods","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","className","Button","type","variant","onClick","List","sx","width","maxWidth","bgcolor","map","good","ListItem","ListItemText","primary","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAuBKA,E,+GAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,MAAQ,kBAAM,EAAKC,SAAS,CAAEL,WAAW,KAP3C,EASEM,aAAe,kBAAM,EAAKD,SAAS,CAAEH,SAAUN,EAASW,YAT1D,EAWEC,WAAa,kBAAM,EAAKH,SAAS,CAAEH,SAAUN,EAASa,UAXxD,EAaEC,QAAU,WACR,EAAKL,UAAS,SAAAN,GAAK,MAAK,CAAEE,YAAaF,EAAME,gBAdjD,EAiBEU,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QApBzB,4CAwBE,WACE,MAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,SAAUD,EAA7B,EAA6BA,WACvBY,EAzDV,SACEA,EACAX,EACAD,GAEA,IAAMa,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAYC,GAC7B,OAAQf,GACN,KAAKN,EAASW,SACZ,OAAOS,EAAGE,cAAcD,GAE1B,KAAKrB,EAASa,OACZ,OAAOO,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAINlB,EACHa,EAAaJ,UACbI,EAmCYM,CAAkBvB,EAAiBK,EAAUD,GAE3D,OACE,qBAAKoB,UAAU,MAAf,SAEGrB,EAEG,qCACE,cAACsB,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAASb,KAAKN,aAHhB,iCAQA,cAACgB,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAASb,KAAKJ,WAHhB,4BAQA,cAACc,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAASb,KAAKF,QAHhB,qBAQA,cAACY,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAASb,KAAKD,MAHhB,mBAQA,cAACe,EAAA,EAAD,CACEC,GAAI,CACFC,MAAO,OACPC,SAAU,IACVC,QAAS,oBAEXT,UAAU,QANZ,SAQGR,EAAMkB,KAAI,SAAAC,GAAI,OACb,cAACC,EAAA,EAAD,CAEEZ,UAAU,cAFZ,SAIE,cAACa,EAAA,EAAD,CAAcC,QAASH,KAHlBA,WAWb,cAACV,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,WACRC,QAASb,KAAKR,MAHhB,yBAvFZ,GAAyBgC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98f44097.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n// import classNames from 'classnames';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1: string, g2: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  start = () => this.setState({ isStarted: true });\n\n  sortAlphabet = () => this.setState({ sortType: SortType.ALPHABET });\n\n  sortLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted, sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n\n        {isStarted\n          ? (\n            <>\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                onClick={this.sortAlphabet}\n              >\n                Sort alphabetically\n              </Button>\n\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                onClick={this.sortLength}\n              >\n                Sort by length\n              </Button>\n\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </Button>\n\n              <Button\n                type=\"button\"\n                variant=\"outlined\"\n                onClick={this.reset}\n              >\n                Reset\n              </Button>\n\n              <List\n                sx={{\n                  width: '100%',\n                  maxWidth: 360,\n                  bgcolor: 'background.paper',\n                }}\n                className=\"Goods\"\n              >\n                {goods.map(good => (\n                  <ListItem\n                    key={good}\n                    className=\"Goods__item\"\n                  >\n                    <ListItemText primary={good} />\n                  </ListItem>\n                ))}\n              </List>\n            </>\n          )\n\n          : (\n            <Button\n              type=\"button\"\n              variant=\"outlined\"\n              onClick={this.start}\n            >\n              Start\n            </Button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}